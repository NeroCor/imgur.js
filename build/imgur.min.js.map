{"version":3,"sources":["/source/imgur.js","imgur.min.js"],"names":["global","factory","exports","module","require","define","amd","imgur","_","request","this","utils_js__utils","API_URL","API_VERSION","CLIENT_ID","buildOptions","apiUrl","path","method","utils_js","_imgurAPICall__imgurAPICall","options","forEach","option","Error","join","set","promise","_imgurAPICall","_endpoint__endpoint","imgurAPICall","bind","_endpoint","imageEndpoint","get","hash","oauth2Endpoint","responseType","resType","queryString","refresh","refreshToken","clientSecret","topicsEndpoint","topicId","sort","undefined","arguments","page","requestPath","_imgur__Imgur","clientKey","endpoints","image","oauth2","topics","value","key","_imgur"],"mappings":"CAAC,SAAUA,EAAQC,GACI,gBAAZC,UAA0C,mBAAXC,QAAyBA,OAAOD,QAAUD,EAAQG,QAAQ,UAAWA,QAAQ,gCACjG,kBAAXC,SAAyBA,OAAOC,IAAMD,QAAQ,SAAU,+BAAgCJ,GAC/FD,EAAOO,MAAQN,EAAQD,EAAOQ,EAAGR,EAAOS,UAC1CC,KAAM,SAAUF,EAAGC,GAAW,YAE5B,IAAIE,IACAC,QAAU,wBACVC,YAAa,IACbC,UAAW,GACXC,aAAc,SAASC,EAAQC,EAAMC,GACjC,OAASF,OAAAA,EAAQC,KAAAA,EAAMC,OAAAA,KAI3BC,EAAWR,EAEXS,EAA8B,SAASC,GAOvC,OANC,SAAU,SAAU,QAAQC,QAAQ,SAAAC,GACjC,IAAIF,EAAQE,GACR,KAAM,IAAIC,OAAMD,EAAS,wBAI1Bd,EAAQY,EAAQH,SAASG,EAAQL,OAAQK,EAAQJ,MAAMQ,KAAK,MAC9DC,IAAI,gBAAiB,aAAeP,EAASL,WAC7Ca,WAGLC,EAAgBR,EAEhBS,EAAsB,SAAAR,GAGtB,MAFAA,GAAQS,aAAetB,EAAEuB,KAAKH,EAAeP,GAC7CA,EAAQL,OAASK,EAAQL,SAAWG,EAASP,QAASO,EAASN,aAAaY,KAAK,KAC1EJ,GAGPW,EAAYH,EAEZI,EAAgBD,GAChBf,KAAM,QACND,QAASG,EAASP,QAASO,EAASN,aAAaY,KAAK,KACtDS,IAAG,SAACC,GACA,GAAMd,GAAUF,EAASJ,aAAaL,KAAKM,QAASN,KAAKO,KAAMkB,GAAMV,KAAK,KAAM,MAChF,OAAOf,MAAKoB,aAAaT,MAI7Be,EAAiBJ,GACjBf,KAAM,SACND,OAAQG,EAASP,QACjBsB,IAAG,SAACG,GACA,GAAMC,GAAWD,GAAgB,QAC3BE,EAAc,KAAM,iBACLD,EAAO,aACXnB,EAASL,WAC5BW,KAAK,KAEGR,GAAQP,KAAKO,KAAM,aAAaQ,KAAK,KAAOc,EAC5ClB,EAAUF,EAASJ,aAAaL,KAAKM,OAAQC,EAAM,MAEzD,OAAOP,MAAKoB,aAAaT,IAE7BmB,QAAO,SAACC,EAAcC,GAClB,GAAMH,GAAc,KAAM,iBACLE,EAAY,aAChBtB,EAASL,UAAS,iBACd4B,EACjB,4BACFjB,KAAK,KAEDR,GAAQP,KAAKO,KAAM,SAASQ,KAAK,KAAOc,EACxClB,EAAUF,EAASJ,aAAaL,KAAKM,OAAQC,EAAM,OAEzD,OAAOP,MAAKoB,aAAaT,MAI7BsB,EAAiBX,GACjBf,KAAM,SACND,QAASG,EAASP,QAASO,EAASN,aAAaY,KAAK,KACtDS,IAAG,SAACU,GCVA,GDUSC,GAAIC,SAAAC,UAAA,GAAC,QAAOA,UAAA,GAAEC,EAAIF,SAAAC,UAAA,GAAC,EAACA,UAAA,GACvBE,GAAevC,KAAKO,KAAM2B,EAASC,EAAMG,GAAMvB,KAAK,KACpDJ,EAAUF,EAASJ,aAAaL,KAAKM,OAAQiC,EAAa,MAChE,OAAOvC,MAAKoB,aAAaT,MAI7B6B,EAAgB,SAAAC,GAChB,IAAIA,EAAa,KAAM,IAAI3B,OAAM,iDACjC,IAAI4B,IACAC,MAAQpB,EACRqB,OAAQlB,EACRmB,OAAQZ,EAGZxB,GAASL,UAAYqC,CAErB,IAAI5C,IACAuB,aAAeF,EASnB,OANArB,GAAMO,UAAYqC,EAElB3C,EAAEc,QAAQ8B,EAAW,SAASI,EAAOC,GACjClD,EAAMkD,GAAOD,IAGVjD,GAGPmD,EAASR,CAEb,OAAOQ","file":"imgur.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('superagent-bluebird-promise')) :\n    typeof define === 'function' && define.amd ? define(['lodash', 'superagent-bluebird-promise'], factory) :\n    global.imgur = factory(global._, global.request)\n}(this, function (_, request) { 'use strict';\n\n    let utils_js__utils = {\n        API_URL : 'https://api.imgur.com',\n        API_VERSION: '3',\n        CLIENT_ID: '',\n        buildOptions: function(apiUrl, path, method) {\n            return { apiUrl, path, method };\n        }\n    };\n\n    var utils_js = utils_js__utils;\n\n    let _imgurAPICall__imgurAPICall = function(options) {\n        ['method', 'apiUrl', 'path'].forEach(option => {\n            if(!options[option]) {\n                throw new Error(option + ' must be specified');\n            }\n        });\n\n        return request[options.method]([options.apiUrl, options.path].join('/'))\n            .set('Authorization', 'Client-ID ' + utils_js.CLIENT_ID)\n            .promise();\n    };\n\n    var _imgurAPICall = _imgurAPICall__imgurAPICall;\n\n    let _endpoint__endpoint = options => {\n        options.imgurAPICall = _.bind(_imgurAPICall, options);\n        options.apiUrl = options.apiUrl || [utils_js.API_URL, utils_js.API_VERSION].join('/');\n        return options;\n    };\n\n    var _endpoint = _endpoint__endpoint;\n\n    var imageEndpoint = _endpoint({\n        path: 'image',\n        apiUrl: [utils_js.API_URL, utils_js.API_VERSION].join('/'),\n        get(hash) {\n            const options = utils_js.buildOptions(this.apiUrl, [this.path, hash].join('/'), 'get');\n            return this.imgurAPICall(options);\n        }\n    });\n\n    var oauth2Endpoint = _endpoint({\n        path: 'oauth2',\n        apiUrl: utils_js.API_URL,\n        get(responseType) {\n            const resType = (responseType || 'token');\n            const queryString = '?' + [\n                `response_type=${resType}`,\n                `client_id=${utils_js.CLIENT_ID}`\n        ].join('&');\n\n            const path = [this.path, 'authorize'].join('/') + queryString;\n            const options = utils_js.buildOptions(this.apiUrl, path, 'get');\n\n            return this.imgurAPICall(options);\n        },\n        refresh(refreshToken, clientSecret) {\n            const queryString = '?' + [\n                `refresh_token=${refreshToken}`,\n                `client_id=${utils_js.CLIENT_ID}`,\n                `client_secret=${clientSecret}`,\n                'grant_type=refresh_token'\n            ].join('&');\n\n            const path = [this.path, 'token'].join('/') + queryString;\n            const options = utils_js.buildOptions(this.apiUrl, path, 'post');\n\n            return this.imgurAPICall(options);\n        }\n    });\n\n    var topicsEndpoint = _endpoint({\n        path: 'topics',\n        apiUrl: [utils_js.API_URL, utils_js.API_VERSION].join('/'),\n        get(topicId, sort='viral', page=0) {\n            const requestPath = [this.path, topicId, sort, page].join('/');\n            const options = utils_js.buildOptions(this.apiUrl, requestPath, 'get');\n            return this.imgurAPICall(options);\n        }\n    });\n\n    let _imgur__Imgur = clientKey => {\n        if(!clientKey) { throw new Error('Client Key required to initialize imgur client');}\n        let endpoints = {\n            image : imageEndpoint,\n            oauth2: oauth2Endpoint,\n            topics: topicsEndpoint\n        };\n\n        utils_js.CLIENT_ID = clientKey;\n\n        let imgur = {\n            imgurAPICall : _imgurAPICall\n        };\n\n        imgur.CLIENT_ID = clientKey;\n\n        _.forEach(endpoints, function(value, key) {\n            imgur[key] = value;\n        });\n\n        return imgur;\n    };\n\n    var _imgur = _imgur__Imgur;\n\n    return _imgur;\n\n}));\n",null],"sourceRoot":"/source/"}