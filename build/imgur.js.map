{"version":3,"sources":["imgur.js"],"names":[],"mappings":"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","file":"imgur.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('superagent-bluebird-promise'), require('lodash')) :\n    typeof define === 'function' && define.amd ? define(['superagent-bluebird-promise', 'lodash'], factory) :\n    global.imgur = factory(global.request, global._)\n}(this, function (request, _) { 'use strict';\n\n    var utils = {\n        API_URL: 'https://api.imgur.com',\n        API_VERSION: '3',\n        CLIENT_ID: '',\n        buildOptions: (apiUrl, path, method, body) => {\n            const requestOptions = (body) ?\n                { apiUrl, path, method, body } :\n                { apiUrl, path, method };\n        \n            return requestOptions;\n        },\n        bearer: ''\n    };\n\n    var imgurAPICall = function(options) {\n        ['method', 'apiUrl', 'path'].forEach(option => {\n            if (!options[option]) {\n                throw new Error(`${option} must be specified`);\n            }\n        });\n\n        let authToken = `Client-ID ${utils.CLIENT_ID}`;\n        const body = options.body || {};\n\n        if(utils.BEARER) {\n            authToken = `Bearer ${utils.BEARER}`;\n        }\n\n        return request[options.method](`${options.apiUrl}/${options.path}`)\n            .send(body)\n            .set('Authorization', authToken)\n            .promise();\n    };\n\n    var endpoint = function(options) {\n        options.imgurAPICall = _.bind(imgurAPICall, options);\n        options.apiUrl = options.apiUrl || `${utils.API_URL}/${utils.API_VERSION}`;\n\n        return options;\n    }\n\n    var imageEndpoint = endpoint({\n        path: 'image',\n        apiUrl: `${utils.API_URL}/${utils.API_VERSION}`,\n        get(hash) {\n            const options = utils.buildOptions(this.apiUrl, `${this.path}/${hash}`, 'get');\n\n            return this.imgurAPICall(options);\n        }\n    });\n\n    var oauth2Endpoint = endpoint({\n        path: 'oauth2',\n        apiUrl: utils.API_URL,\n        get(responseType) {\n            const resType = responseType || 'token';\n            const queryString = '?' + [\n                `response_type=${resType}`,\n                `client_id=${utils.CLIENT_ID}`\n        ].join('&');\n\n            const path = `${this.path}/authorize${queryString}`;\n            const options = utils.buildOptions(this.apiUrl, path, 'get');\n\n            return this.imgurAPICall(options);\n        },\n        refresh(refreshToken, clientSecret) {\n            const queryString = '?' + [\n                `refresh_token=${refreshToken}`,\n                `client_id=${utils.CLIENT_ID}`,\n                `client_secret=${clientSecret}`,\n                'grant_type=refresh_token'\n            ].join('&');\n\n            const path = `${this.path}/token${queryString}`;\n            const options = utils.buildOptions(this.apiUrl, path, 'post');\n\n            return this.imgurAPICall(options);\n        }\n    });\n\n    var topicsEndpoint = endpoint({\n        path: 'topics',\n        apiUrl: `${utils.API_URL}/${utils.API_VERSION}`,\n        get(topicId, sort='viral', page=0) {\n            const requestPath = `${this.path}/${topicId}/${sort}/${page}`;\n            const options = utils.buildOptions(this.apiUrl, requestPath, 'get');\n\n            return this.imgurAPICall(options);\n        },\n        getDefaults() {\n            const requestPath = `${this.path}/defaults`;\n            const options = utils.buildOptions(this.apiUrl, requestPath, 'get');\n\n            return this.imgurAPICall(options);\n        }\n    });\n\n    const postOptions = {\n        path: 'gallery',\n        apiUrl: `${utils.API_URL}/${utils.API_VERSION}`\n};\n\n    var galleryPostEndpoint = endpoint(_.extend({}, postOptions, {\n        get(hash) {\n            const path = `${this.path}/${hash}`;\n            const options = utils.buildOptions(this.apiUrl, path, 'get');\n\n            return this.imgurAPICall(options);\n        },\n        report(hash, reason) {\n            const path = `${this.path}/${hash}/report`;\n            const options = utils.buildOptions(this.apiUrl, path, 'post', {reason: reason});\n\n            return this.imgurAPICall(options);\n        },\n        comments: endpoint(_.extend({}, postOptions, {\n            get(hash, sort='best') {\n                const path = `${this.path}/${hash}/comments/${sort}`;\n                const options = utils.buildOptions(this.apiUrl, path, 'get');\n\n                return this.imgurAPICall(options);\n            }\n        }))\n    }));\n\n    var galleryEndpoint = endpoint({\n        path: 'gallery',\n        apiUrl: `${utils.API_URL}/${utils.API_VERSION}`,\n        get(section='hot', sort='viral', page=0, showViral=true) {\n            const requestPath = `${this.path}/${section}/${sort}/${page}?showViral=${showViral}`;\n            const options = utils.buildOptions(this.apiUrl, requestPath, 'get');\n\n            return this.imgurAPICall(options);\n        },\n        post: galleryPostEndpoint\n    });\n\n    var commentEndpoint = endpoint({\n        path: 'comment',\n        apiUrl: `${utils.API_URL}/${utils.API_VERSION}`,\n        downvote(commentId) {\n            const path = `${this.path}/${commentId}/vote/down`;\n            const options = utils.buildOptions(this.apiUrl, path, 'post');\n\n            return this.imgurAPICall(options);\n        },\n        upvote(commentId) {\n            const path = `${this.path}/${commentId}/vote/up`;\n            const options = utils.buildOptions(this.apiUrl, path, 'post');\n\n            return this.imgurAPICall(options);\n        },\n        report(commentId, reason) {\n            const path = `${this.path}/${commentId}/report`;\n            const options = utils.buildOptions(this.apiUrl, path, 'post', {reason: reason});\n\n            return this.imgurAPICall(options);\n        },\n        deleteComment(commentId) {\n            const path = `${this.path}/${commentId}`;\n            const options = utils.buildOptions(this.apiUrl, path, 'delete');\n\n            return this.imgurAPICall(options);\n        }\n    });\n\n    var imgur = function(clientKey) {\n        let setUtil = function(key, value) {\n            utils[key] = value;\n        };\n\n        let getUtil = function(key) {\n            return utils[key];\n        };\n\n        if (!clientKey) {\n            throw new Error('Client Key required to initialize imgur client');\n        }\n\n        setUtil('CLIENT_ID', clientKey);\n\n        return {\n            imgurAPICall,\n            CLIENT_ID: clientKey,\n            image: imageEndpoint,\n            oauth2: oauth2Endpoint,\n            topics: topicsEndpoint,\n            gallery: galleryEndpoint,\n            comment: commentEndpoint,\n            setUtil,\n            getUtil\n        };\n    }\n\n    return imgur;\n\n}));\n"],"sourceRoot":"/source/"}