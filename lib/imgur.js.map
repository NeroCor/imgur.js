{"version":3,"sources":["imgur.js"],"names":[],"mappings":"AAAA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AACxB,WAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,GACjI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,QAAQ,EAAE,YAAY,CAAC,EAAE,OAAO,CAAC,GACtF,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAA;CACnD,CAAA,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,OAAO,EAAE;AAAE,gBAAY,CAAC;;AAEzC,QAAI,eAAe,GAAG;AAClB,eAAO,EAAG,yBAAyB;AACnC,iBAAS,EAAE,EAAE;KAChB,CAAC;;AAEF,QAAI,QAAQ,GAAG,eAAe,CAAC;;AAE/B,QAAM,WAAW,GAAG,SAAd,WAAW,CAAY,OAAO,EAAE;AAClC,YAAG,CAAC,OAAO,CAAC,EAAE,EAAE;AAAE,kBAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;SAAC;AAC3D,eAAO,CACF,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAC/C,GAAG,CAAC,eAAe,EAAE,YAAY,GAAG,QAAQ,CAAC,SAAS,CAAC,CACvD,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;KACxB,CAAC;;AAEF,QAAI,WAAW,GAAG,WAAW,CAAC;;AAE9B,QAAM,aAAa,GAAG;AAClB,YAAI,EAAE,EAAE;AACR,mBAAW,EAAE,WAAW;KAC3B,CAAC;;AAEF,QAAI,aAAa,GAAG,aAAa,CAAC;;AAElC,QAAI,aAAa,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,EAAE;AACxC,YAAI,EAAE,OAAO;AACb,WAAG,EAAE,aAAU,IAAI,EAAE,EAAE,EAAE;AACrB,mBAAO,aAAa,CAAC,WAAW,CAAC;AAC7B,oBAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AACjC,kBAAE,EAAE,EAAE;aACT,CAAC,CAAC;SACN;KACJ,CAAC,CAAC;;AAEH,QAAI,aAAa,GAAG,SAAhB,aAAa,CAAY,SAAS,EAAE;AACpC,YAAI,SAAS,GAAG;AACZ,iBAAK,EAAG,aAAa;SACxB,CAAC;;AAEF,gBAAQ,CAAC,SAAS,GAAG,SAAS,CAAC;;AAE/B,YAAI,KAAK,GAAG;AACR,yBAAa,EAAG,aAAa;AAC7B,uBAAW,EAAG,WAAW;SAC5B,CAAC;;AAEF,aAAK,CAAC,SAAS,GAAG,SAAS,CAAC;;AAE5B,SAAC,CAAC,OAAO,CAAC,SAAS,EAAE,UAAS,KAAK,EAAE,GAAG,EAAE;AACtC,iBAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SACtB,CAAC,CAAC;;AAEH,eAAO,KAAK,CAAC;KAChB,CAAC;;AAEF,QAAI,MAAM,GAAG,aAAa,CAAC;;AAE3B,WAAO,MAAM,CAAC;CAEjB,CAAC,CAAE","file":"imgur.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('superagent')) :\n    typeof define === 'function' && define.amd ? define(['lodash', 'superagent'], factory) :\n    global.imgur = factory(global._, global.request)\n}(this, function (_, request) { 'use strict';\n\n    let utils_js__utils = {\n        API_URL : 'https://api.imgur.com/3',\n        CLIENT_ID: ''\n    };\n\n    var utils_js = utils_js__utils;\n\n    const imgurMethod = function(options) {\n        if(!options.cb) { throw new Error('cb must be specified');}\n        request\n            .get([utils_js.API_URL, options.path].join('/'))\n            .set('Authorization', 'Client-ID ' + utils_js.CLIENT_ID)\n            .end(options.cb);\n    };\n\n    var ImgurMethod = imgurMethod;\n\n    const imgurEndpoint = {\n        path: '',\n        imgurMethod: ImgurMethod\n    };\n\n    var ImgurEndpoint = imgurEndpoint;\n\n    var imageEndpoint = _.extend(ImgurEndpoint, {\n        path: 'image',\n        get: function (hash, cb) {\n            return ImgurEndpoint.imgurMethod({\n                path: [this.path, hash].join('/'),\n                cb: cb\n            });\n        }\n    });\n\n    let _imgur__Imgur = function(clientKey) {\n        let endpoints = {\n            image : imageEndpoint\n        };\n\n        utils_js.CLIENT_ID = clientKey;\n\n        var imgur = {\n            ImgurEndpoint : ImgurEndpoint,\n            ImgurMethod : ImgurMethod\n        };\n\n        imgur.CLIENT_ID = clientKey;\n\n        _.forEach(endpoints, function(value, key) {\n            imgur[key] = value;\n        });\n\n        return imgur;\n    };\n\n    var _imgur = _imgur__Imgur;\n\n    return _imgur;\n\n}));\n"],"sourceRoot":"/source/"}